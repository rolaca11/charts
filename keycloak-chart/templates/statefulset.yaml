apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "..labels" . | nindent 4 }}
spec:
  serviceName: {{ .Release.Name }}
  selector:
    matchLabels:
      app.kubernetes.io/component: keycloak
      {{- include "..selectorLabels" . | nindent 6}}
  replicas: 1
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keycloak
        {{- include "..labels" . | nindent 8 }}
      annotations:
        {{ .Values.statefulSet.pod.annotations | toYaml | nindent 8 }}
    spec:
      nodeSelector:
        {{ .Values.statefulSet.pod.nodeSelector | toYaml | nindent 8 }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: keycloak
          {{- with .Values.statefulSet.pod.resources}}
          resources:
            {{ . | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ .Values.statefulSet.pod.image.name }}:{{ default .Chart.AppVersion .Values.statefulSet.pod.image.tag }}"
          command:
            - "opt/keycloak/bin/kc.sh"
            - "start"
            - "--storage=chm"
          ports:
            {{ .Values.statefulSet.pod.ports | toYaml | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
          livenessProbe:
            httpGet:
              port: http
              path: /health/live
            failureThreshold: 5
            successThreshold: 1
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: http
              path: /health/ready
            failureThreshold: 5
            successThreshold: 1
            initialDelaySeconds: 60
            periodSeconds: 15
          startupProbe:
            httpGet:
              port: http
              path: /health/live
            failureThreshold: 5
            successThreshold: 1
            initialDelaySeconds: 60
            periodSeconds: 15
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - mountPath: /opt/keycloak/data
              name: {{ .Release.Name }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Release.Name }}
      spec:
        resources:
          requests:
            storage: {{.Values.statefulSet.storage.size}}
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.statefulSet.storage.className }}

