statefulSet:
  pod:
    image:
      name: "quay.io/keycloak/keycloak"
    annotations: {}
    resources:
      requests:
        cpu: 0.2
        memory: 0.5Gi
      limits:
        cpu: 0.5
        memory: 1Gi
    ports:
      - name: http
        containerPort: 8080
        protocol: TCP
  storage:
    className: "standard"
    size: 5Gi
service:
  type: ClusterIP
ingress:
  tls:
    enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
config:
  basePath: "/"

  storageAreaActionToken: "chm"
  storageAreaAuthSession: "chm"
  storageAreaAuthorization: "chm"
  storageAreaClient: "chm"
  storageAreaClientScope: "chm"
  storageAreaEventAdmin: "chm"
  storageAreaEventAuth: "chm"
  storageAreaGroup: "chm"
  storageAreaLoginFailure: "chm"
  storageAreaRealm: "chm"
  storageAreaRole: "chm"
  storageAreaSingleUseObject: "chm"
  storageAreaUser: "chm"
  storageAreaUserSession: "chm"
  storage: "chm"

  # <type>       Defines the cache mechanism for high-availability. By default, a 'ispn' cache
  # is used to create a cluster between multiple server nodes. A 'local' cache
  # disables clustering and is intended for development and testing purposes.
  cache: ispn

  # <file>
  # Defines the file from which cache configuration should be loaded from. The
  # configuration file is relative to the 'conf/' directory.
  cacheConfigFile:

  # <stack>
  # Define the default stack to use for cluster communication and node discovery.
  # This option only takes effect if 'cache' is set to 'ispn'.
  cacheStack: udp

  # <vendor>      The database vendor. Possible values are: dev-file, dev-mem, mariadb, mssql,
  # mysql, oracle, postgres.
  db:

  # <password>
  # The password of the database user.
  dbPassword:

  # <size>
  # The initial size of the connection pool.
  dbPoolInitialSize:

  # <size>
  # The maximum size of the connection pool.
  dbPoolMaxSize: 100

  # <size>
  # The minimal size of the connection pool.
  dbPoolMinSize:

  # <schema> The database schema to be used.
  dbSchema:

  # <jdbc-url>   The full database JDBC URL. If not provided, a default URL is set based on the
  # selected database vendor. For instance, if using 'postgres', the default
  # JDBC URL would be 'jdbc:postgresql://localhost/keycloak'.
  dbUrl:

  # <dbname>
  # Sets the database name of the default JDBC URL of the chosen vendor. If the
  # `db-url` option is set, this option is ignored.
  dbUrlDatabase:

  # <hostname>
  # Sets the hostname of the default JDBC URL of the chosen vendor. If the
  # `db-url` option is set, this option is ignored.
  dbUrlHost:

  # <port> Sets the port of the default JDBC URL of the chosen vendor. If the
  # `db-url` option is set, this option is ignored.
  dbUrlPort:

  # <properties>
  # Sets the properties of the default JDBC URL of the chosen vendor. If the
  # `db-url` option is set, this option is ignored.
  dbUrlProperties:

  # <username>
  # The username of the database user.
  dbUsername:

  # <true|false>
  # If set to false, Keycloak uses a non-XA datasource in case the database does
  # not support XA transactions.
  transactionXaEnabled: false

  # <feature> Enables a set of one or more features.
  features:

  # <feature>
  # Disables a set of one or more features.
  featuresDisabled:

  # <hostname>
  # Hostname for the Keycloak server.
  hostname: ""

  # <hostname>
  # The hostname for accessing the administration console. Use this option if you
  # are exposing the administration console using a hostname other than the
  # value set to the 'hostname' option.
  hostnameAdmin:

  # <url>
  # Set the base URL for accessing the administration console, including scheme,
  # host, port and path
  hostnameAdminUrl:

  # <path>
  # This should be set if proxy uses a different context-path for Keycloak.
  hostnamePath:

  # <port>
  # The port used by the proxy when exposing the hostname. Set this option if the
  # proxy uses a port other than the default HTTP and HTTPS ports.
  hostnamePort: -1

  # <true|false>
  # Disables dynamically resolving the hostname from request headers. Should
  # always be set to true in production, unless proxy verifies the Host header.
  #
  hostnameStrict: true

  # <true|false>
  # By default backchannel URLs are dynamically resolved from request headers to
  # allow internal and external applications. If all applications use the public
  # URL this option should be enabled.
  hostnameStrictBackchannel: false

  # <url> Set the base URL for frontend URLs, including scheme, host, port and path.
  # HTTP/TLS:
  hostnameUrl:

  # <true|false>
  # Enables the HTTP listener.
  httpEnabled: true

  # <host>    The used HTTP Host.
  httpHost: 0.0.0.0

  # <port>    The used HTTP port.
  httpPort: 8080

  # <path>
  # Set the path relative to '/' for serving resources. The path must start with a
  # '/'.
  httpRelativePath: /

  # <file>
  # The file path to a server certificate or certificate chain in PEM format.
  httpsCertificateFile:

  # <file>
  # The file path to a private key in PEM format.
  httpsCertificateKeyFile:

  # <ciphers>
  # The cipher suites to use. If none is given, a reasonable default is selected.
  httpsCipherSuites:

  # <auth>
  # Configures the server to require/request client authentication. Possible
  # Values: none, request, required.
  httpsClientAuth: none

  # <file>
  # The key store which holds the certificate information instead of specifying
  # separate files.
  httpsKeyStoreFile:

  # <password>
  # The password of the key store file.
  httpsKeyStorePassword: password

  # <type>
  # The type of the key store file. If not given, the type is automatically
  # detected based on the file name.
  httpsKeyStoreType:

  # <port>   The used HTTPS port.
  httpsPort: 8443

  # <protocols>
  # The list of protocols to explicitly enable.
  httpsProtocols: TLSv1.3

  # <file>
  # The trust store which holds the certificate information of the certificates to
  # trust.
  httpsTrustStoreFile:

  # <password>
  # The password of the trust store file.
  httpsTrustStorePassword:

  # <type>
  # The type of the trust store file. If not given, the type is automatically
  # detected based on the file name.
  httpsTrustStoreType:

  # <true|false>
  # If the server should expose health check endpoints. If enabled, health checks
  # are available at the '/health', '/health/ready' and '/health/live'
  # endpoints.
  healthEnabled: true

  # <true|false>
  # If the server should expose metrics. If enabled, metrics are available at the
  # '/metrics' endpoint.
  metricsEnabled: true

  # <mode>       The proxy address forwarding mode if the server is behind a reverse proxy.
  # Possible values are: edge,reencrypt,passthrough
  proxy: edge

  # <provider>    Enables a vault provider.
  vault:

  # <dir>   If set, secrets can be obtained by reading the content of files within the
  # given directory.
  vaultDir:

  # <handler>      Enable one or more log handlers in a comma-separated list. Available log
  # handlers are: console,file,gelf
  log: console

  # <true|false>
  # Enable or disable colors when logging to console.
  logConsoleColor: false

  # <format>
  # The format of unstructured console log entries. If the format has spaces in
  # it, escape the value using "<format>".
  logConsoleFormat: "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"

  # <default|json>
  # Set the log output to JSON or default (plain) unstructured logging.
  logConsoleOutput: default

  # <path>/<file-name>.log
  # Set the log file path and filename.
  logFile: data/log/keycloak.log

  # <format>
  # Set a format specific to file log entries.
  logFileFormat: "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"

  # <name>
  # The facility (name of the process) that sends the message.
  logGelfFacility: keycloak

  # <hostname>
  # Hostname of the Logstash or Graylog Host. By default UDP is used, prefix the
  # host with 'tcp:' to switch to TCP. Example: 'tcp:localhost'
  logGelfHost: localhost

  # <true|false>
  # Include source code location.
  logGelfIncludeLocation: true

  # <true|false>
  # Include message parameters from the log event.
  logGelfIncludeMessageParameters: true

  # <true|false>
  # If set to true, occuring stack traces are included in the 'StackTrace' field
  # in the gelf output.
  logGelfIncludeStackTrace: true

  # <size>
  # Maximum message size (in bytes). If the message size is exceeded, gelf will
  # submit the message in multiple chunks.
  logGelfMaxMessageSize: 8192

  # <port>
  # The port the Logstash or Graylog Host is called on.
  logGelfPort: 12201

  # <pattern>
  # Set the format for the gelf timestamp field. Uses Java SimpleDateFormat
  # pattern.
  logGelfTimestampFormat: yyyy-MM-dd HH:mm:ss,SSS

  # <category:level>
  # The log level of the root category or a comma-separated list of individual
  # categories and their levels. For the root category, you don't need to
  # specify a category.
  logLevel: info

